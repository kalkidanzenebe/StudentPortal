@using System.Security.Claims
@using StudentPortal.Web.Data
@inject ApplicationDbContext _context

<ul class="navbar-nav">
    @if (User.Identity?.IsAuthenticated == true)
    {
        var userIdString = User.FindFirstValue(ClaimTypes.NameIdentifier);

        @if (!string.IsNullOrEmpty(userIdString) && Guid.TryParse(userIdString, out Guid userId))
        {
            var user = await _context.Users.FindAsync(userId);

            @if (user != null)
            {
                <li class="nav-item">
                    <span class="nav-link text-light">Hello @user.Name!</span>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <span class="nav-link text-warning">User not found</span>
                </li>
            }
        }
        else
        {
            <li class="nav-item">
                <span class="nav-link text-warning">Invalid user session</span>
            </li>
        }

        <li class="nav-item">
            <form class="form-inline" asp-controller="Auth" asp-action="Logout">
                <button type="submit" class="nav-link btn btn-link text-light">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-controller="Auth" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-controller="Auth" asp-action="Login">Login</a>
        </li>
    }
</ul>