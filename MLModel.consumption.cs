// This file was auto-generated by ML.NET Model Builder.
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace StudentPortal_Web
{
    public partial class MLModel
    {
        /// <summary>
        /// model input class for MLModel.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [LoadColumn(0)]
            [ColumnName(@"Id")]
            public float Id { get; set; }

            [LoadColumn(1)]
            [ColumnName(@"Name")]
            public string? Name { get; set; }

            [LoadColumn(2)]
            [ColumnName(@"Email")]
            public string? Email { get; set; }

            [LoadColumn(3)]
            [ColumnName(@"Phone")]
            public string? Phone { get; set; }

            [LoadColumn(4)]
            [ColumnName(@"LearningStyle")]
            public string? LearningStyle { get; set; }

            [LoadColumn(5)]
            [ColumnName(@"AcademicGoal")]
            public string? AcademicGoal { get; set; }

            [LoadColumn(6)]
            [ColumnName(@"CareerInterest")]
            public string? CareerInterest { get; set; }

            [LoadColumn(7)]
            [ColumnName(@"Age")]
            public float Age { get; set; }

            [LoadColumn(8)]
            [ColumnName(@"Location")]
            public string? Location { get; set; }

            [LoadColumn(9)]
            [ColumnName(@"PrimaryLanguage")]
            public string? PrimaryLanguage { get; set; }

            [LoadColumn(10)]
            [ColumnName(@"PersonalityType")]
            public string? PersonalityType { get; set; }

            [LoadColumn(11)]
            [ColumnName(@"TechnicalSkills")]
            public string? TechnicalSkills { get; set; }

            [LoadColumn(12)]
            [ColumnName(@"Extracurriculars")]
            public string? Extracurriculars { get; set; }

            [LoadColumn(13)]
            [ColumnName(@"AccessedResources")]
            public string? AccessedResources { get; set; }

            [LoadColumn(14)]
            [ColumnName(@"GPA")]
            public float GPA { get; set; }

            [LoadColumn(15)]
            [ColumnName(@"UserId")]
            public float UserId { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for MLModel.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName(@"Id")]
            public float Id { get; set; }

            [ColumnName(@"Name")]
            public float[]? Name { get; set; }

            [ColumnName(@"Email")]
            public float[]? Email { get; set; }

            [ColumnName(@"Phone")]
            public float[]? Phone { get; set; }

            [ColumnName(@"LearningStyle")]
            public float[]? LearningStyle { get; set; }

            [ColumnName(@"AcademicGoal")]
            public float[]? AcademicGoal { get; set; }

            [ColumnName(@"CareerInterest")]
            public float[]? CareerInterest { get; set; }

            [ColumnName(@"Age")]
            public float Age { get; set; }

            [ColumnName(@"Location")]
            public float[]? Location { get; set; }

            [ColumnName(@"PrimaryLanguage")]
            public float[]? PrimaryLanguage { get; set; }

            [ColumnName(@"PersonalityType")]
            public float[]? PersonalityType { get; set; }

            [ColumnName(@"TechnicalSkills")]
            public float[]? TechnicalSkills { get; set; }

            [ColumnName(@"Extracurriculars")]
            public float[]? Extracurriculars { get; set; }

            [ColumnName(@"AccessedResources")]
            public float[]? AccessedResources { get; set; }

            [ColumnName(@"GPA")]
            public float GPA { get; set; }

            [ColumnName(@"UserId")]
            public float UserId { get; set; }

            [ColumnName(@"Features")]
            public float[]? Features { get; set; }

            [ColumnName(@"Score")]
            public float Score { get; set; }

        }

        #endregion

        private static string MLNetModelPath = Path.GetFullPath("MLModel.mlnet");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);


        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }
    }
}
